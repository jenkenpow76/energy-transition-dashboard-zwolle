// Building a model named energy_policy_model, focused on simulating energy policy effects using buildings from a shapefile
model energy_policy_model 

// The overall setup and parameters for the model 
global {
    file shape_file_buildings <- file("../data/building.shp");
    file shape_file_roads <- file("../data/road.shp");
    file shape_file_bounds <- file("../data/bounds.shp");
    geometry shape <- envelope(shape_file_bounds); // Sets the visual extent (zoom area) of your simulation based on the bounds.shp file

    // Model policy and tracking variables
    bool subsidy_available <- true;       // Determines if building upgrades are subsidized
    float subsidy_rate <- 0.5;            // Placeholder for possible future cost-based effects
    float total_energy <- 0.0;            // Tracks the total energy consumed by all buildings
    float step <- 10 #mn;                 // Simulation step duration (10 minutes)
    int current_year <- 2025;             // Simulation time tracked in years

    // Loads all buildings from the shapefile and reads their NATURE attribute (e.g., Residential, Industrial, etc.) into 'type'.
    // Assigns a random initial energy_consumption (between 1000â€“1500).
    // Sets a 30% base probability to decide to upgrade
    init {
        create building from: shape_file_buildings with: [
            type::string(read("NATURE"))
        ] {
            energy_consumption <- 1000 + rnd(500);
            decision_probability <- 0.3;
            my_color <- #gray; // initial color
        }

        create road from: shape_file_roads;
    }

    // Every simulated year, buildings may upgrade, and energy is recalculated
   reflex simulate_policy {
        current_year <- current_year + 1;

        ask building {
            if (!upgraded and subsidy_available) {
                if (rnd(1.0) < decision_probability) {
                    upgraded <- true;
                    energy_consumption <- energy_consumption * 0.7;
                }
            }

            if upgraded {
                my_color <- #green;
            } else {
                my_color <- #gray;
            }
        }

        total_energy <- sum(building collect each.energy_consumption);
    }
}


// This defines the behavior and properties of each building in the model
species building {
    string type;
    float energy_consumption <- 1000.0;
    bool upgraded <- false;
    float decision_probability <- 0.3;
    rgb my_color;

    // Aspect for drawing buildings with color indicating their upgrade status
    aspect base {
        draw shape color: my_color;
    }
}

// Defines road geometry with a static black color
species road {
    rgb color <- #black;

    aspect base {
        draw shape color: color;
    }
}

// GUI-based experiment setup
experiment energy_policy type: gui {
    parameter "Shapefile for the buildings:" var: shape_file_buildings category: "GIS";
    parameter "Shapefile for the roads:" var: shape_file_roads category: "GIS";
    parameter "Shapefile for the bounds:" var: shape_file_bounds category: "GIS";

    output {
        display map_display type: 3d {
            species building aspect: base;
            species road aspect: base;
        }

        monitor "Total Energy Consumption" value: total_energy;
        monitor "Simulation Year" value: current_year;
    }
}
